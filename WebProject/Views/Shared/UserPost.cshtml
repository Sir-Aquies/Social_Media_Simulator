@model DynamicUser

@if (Model.PageUser.Id == Model.User.Id)
{
	<div class="create-post-container">
		<button type="button" class="create-post-button" onclick="CreatePostWindow()">Create New Post</button>
	</div>
}

@foreach (PostModel post in Model.PageUser.Posts.Reverse())
{
	<div class="post-container">
		<div class="post-info">
			@if (post.User.ProfilePicture != null) 
			{
				@if (Model.PageUser.ProfilePicture.StartsWith("https"))
				{
					<img src="@post.User.ProfilePicture" alt="@post.User.UserName" />
				}
				else
				{
					<img src="data:image/png;base64,@post.User.ProfilePicture" alt="@post.User.UserName" />
				}
			}
			else {
				<img alt="@post.User.UserName" />
			}

			<a class="post-info-username" asp-action="UserPage" asp-controller="User" asp-route-UserName="@post.User.UserName">@post.User.UserName</a>

			@if (post.PostDate.ToString("MM/dd/yyyy") == DateTime.Today.ToString("MM/dd/yyyy"))
			{
				<span>@post.PostDate.ToString("hh:mm tt")</span>
			}
			else
			{
				<span>@post.PostDate.ToString("MM/dd/yyyy")</span>
			}

			@if (post.IsEdited)
			{
				@if (post.EditedDate.ToString("MM/dd/yyyy") == DateTime.Today.ToString("MM/dd/yyyy"))
				{
					<i style="font-size: 14px; margin-left: 0.5rem;">(This post was edited @post.EditedDate.ToString("hh:mm tt"))</i>
				}
				else
				{
					<i style="font-size: 14px; margin-left: 0.5rem;">(This post was edited @post.EditedDate.ToString("MM/dd/yyyy"))</i>
				}
			}

			@if (Model.PageUser.Id == Model.User.Id)
			{
				<div class="post-option-button" onclick="OptionButton(this);" onmousedown="event.stopPropagation()">
					<div class="button">...</div>

					<div onmousedown="event.stopPropagation()" onclick="event.stopPropagation();" class="post-form">
						<input type="button" value="Edit" onclick="EditPostWindow(@post.Id, this);" />
						<input type="button" value="Delete" onclick="DeletePost(@post.Id, this)"/>
						@Html.AntiForgeryToken()
					</div>
				</div>
			}
		</div>

		<div class="post-content">
			<div>@post.Content</div>

			@if (post.Media != null && Model.User.ShowImages)
			{
				@if (post.Media.StartsWith("https"))
				{
					<img src="@post.Media" alt="@post.User.UserName" />
				}
				else
				{
					<img src="data:image/png;base64,@post.Media" alt="@post.User.UserName" />
				}
			}
			else if (post.Media != null && !Model.User.ShowImages)
			{
				<div class="flip-div" onclick="ShowPostImg(this)">Show Image</div>

				@if (post.Media.StartsWith("https"))
				{
					<img id="" src="@post.Media" class="ImgFinder" alt="@post.User.UserName" />
				}
				else
				{
					<img id="" src="data:image/png;base64,@post.Media" class="ImgFinder" alt="@post.User.UserName" />
				}
			}
		</div>

		<div class="post-stats">
			@if (Model.User.LikedPost.Any(p => p.Id == post.Id))
			{
				<button style="font-weight:bold" type="button" onclick="LikePost(@post.Id, this)">
					<span>@post.Likes</span>

					<svg version="1.1" class="like-button liked" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 122.88 106.16" xml:space="preserve">
						<g>
							<path class="like-button-bg" d="M4.02,44.6h27.36c2.21,0,4.02,1.81,4.02,4.03v53.51c0,2.21-1.81,4.03-4.02,4.03H4.02 c-2.21,0-4.02-1.81-4.02-4.03V48.63C0,46.41,1.81,44.6,4.02,44.6L4.02,44.6z M63.06,4.46c2.12-10.75,19.72-0.85,20.88,16.48 c0.35,5.3-0.2,11.47-1.5,18.36l25.15,0c10.46,0.41,19.59,7.9,13.14,20.2c1.47,5.36,1.69,11.65-2.3,14.13 c0.5,8.46-1.84,13.7-6.22,17.84c-0.29,4.23-1.19,7.99-3.23,10.88c-3.38,4.77-6.12,3.63-11.44,3.63H55.07 c-6.73,0-10.4-1.85-14.8-7.37V51.31c12.66-3.42,19.39-20.74,22.79-32.11V4.46L63.06,4.46z" />
						</g>
					</svg>
				</button>
			}
			else 
			{
				<button type="button" onclick="LikePost(@post.Id, this)">
					<span>@post.Likes</span>

					<svg version="1.1" class="like-button" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 122.88 106.16" xml:space="preserve">
						<g>
							<path class="like-button-bg" d="M4.02,44.6h27.36c2.21,0,4.02,1.81,4.02,4.03v53.51c0,2.21-1.81,4.03-4.02,4.03H4.02 c-2.21,0-4.02-1.81-4.02-4.03V48.63C0,46.41,1.81,44.6,4.02,44.6L4.02,44.6z M63.06,4.46c2.12-10.75,19.72-0.85,20.88,16.48 c0.35,5.3-0.2,11.47-1.5,18.36l25.15,0c10.46,0.41,19.59,7.9,13.14,20.2c1.47,5.36,1.69,11.65-2.3,14.13 c0.5,8.46-1.84,13.7-6.22,17.84c-0.29,4.23-1.19,7.99-3.23,10.88c-3.38,4.77-6.12,3.63-11.44,3.63H55.07 c-6.73,0-10.4-1.85-14.8-7.37V51.31c12.66-3.42,19.39-20.74,22.79-32.11V4.46L63.06,4.46z" />
						</g>
					</svg>
				</button>
			}

			<button type="button" onclick="CreateCommentTab(@post.Id)">
				<span>@post.Comments.Count()</span> Comments
			</button>
		</div>

		@foreach(CommentModel comment in post.Comments)
		{
			<div class="post-comments">
				<div class="post-commments-user">
					@if (comment.User.ProfilePicture != null)
					{
						@if (Model.PageUser.ProfilePicture.StartsWith("https"))
						{
							<img src="@comment.User.ProfilePicture" alt="@comment.User.UserName" />
						}
						else
						{
							<img src="data:image/png;base64,@comment.User.ProfilePicture" alt="@comment.User.UserName" />
						}
					}
					else 
					{
						<img src="" alt="@comment.User.UserName" />
					}

					<a class="post-commments-username" asp-action="UserPage" asp-route-UserName="@comment.User.UserName">@comment.User.UserName</a>

					@if (comment.Date.ToString("MM/dd/yyyy") == DateTime.Today.ToString("MM/dd/yyyy"))
					{
						<span>@comment.Date.ToString("hh:mm tt")</span>
					}
					else
					{
						<span>@comment.Date.ToString("MM/dd/yyyy")</span>
					}

					@if (Model.User.Id == comment.User.Id)
					{
						<div class="post-option-button" onclick="OptionButton(this);" onmousedown="event.stopPropagation()">
							<div class="button">...</div>
							<div onmousedown="event.stopPropagation()" onclick="event.stopPropagation();" class="post-form">
								@*<input type="button" value="Edit" onclick="EditPostWindow(@post.Id, this);" />*@
								<input type="button" value="Delete" onclick="DeleteComment(@comment.Id, this)"/>
							</div>
						</div>
					}
				</div>

				<div class="post-comments-content">@comment?.Content</div>

				<div class="post-comments-stats">
					@if (Model.User.LikedComments.Any(c => c.Id == comment.Id))
					{
						<button style="font-weight:bold" type="button" onclick="LikeComment(@comment.Id, this)">
							<span>@comment.Likes</span> Likes
						</button>
					}
					else 
					{
						<button type="button" onclick="LikeComment(@comment.Id, this)">
							<span>@comment.Likes</span> Likes
						</button>
					}
				</div>
			</div>
		}
	</div>
}

<script src="~/lib/jquery/dist/jquery.js"></script>

<script>
	function ShowPostImg(element) {
		const img = element.nextElementSibling;
		img.id = "currentimg";
		$(`#${img.id}`).slideToggle();
		img.id = "";
	};
</script>

